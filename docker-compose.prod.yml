version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    env_file: .env.production
    depends_on:
      - postgres
      - redis
    networks:
      - app_network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.scheduler
    env_file: .env.production
    depends_on:
      - postgres
      - redis
    networks:
      - app_network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    env_file: .env.production
    depends_on:
      - postgres
      - redis
    networks:
      - app_network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: url-shortener-db
      POSTGRES_USER: url-shortener-db-user
      POSTGRES_PASSWORD: url-shortener-db-pass
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deploy/postgres/init-scripts:/docker-entrypoint-initdb.d
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  pgbouncer:
    image: edoburu/pgbouncer
    volumes:
      - ./deploy/postgres/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini
      - ./deploy/postgres/userlist.txt:/etc/pgbouncer/userlist.txt
    depends_on:
      - postgres
    networks:
      - app_network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  redis:
    image: redis:7-alpine
    networks:
      - app_network
    volumes:
      - redis_data:/data
    command: ["redis-server", "--notify-keyspace-events", "Ex"]
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  migrate:
    image: arigaio/atlas:latest
    command: >
      migrate apply
      --url postgres://url-shortener-db-user:url-shortener-db-pass@pgbouncer:6432/url-shortener-db?sslmode=disable
    depends_on:
      - pgbouncer
    networks:
      - app_network
    volumes:
      - ./migrations/:/migrations

  nginx:
    image: nginx:alpine
    ports:
      - "8000:8000"
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
    networks:
      - app_network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
